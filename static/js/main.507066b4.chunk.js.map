{"version":3,"sources":["firebase.js","components/TwotCreator/TwotCreator.js","components/Twott/Twott.js","pages/Index.js","components/Header/Header.js","components/ConnexionButtons/ConnexionButtons.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","TwotCreator","props","state","TwotContent","handleUpdateTwotContent","bind","handleSubmitData","handleSendTwottEnter","event","key","shiftKey","this","setState","target","value","preventDefault","twott","twottContent","ownerId","twottTime","Date","addDoc","collection","addTwott","className","onSubmit","onChange","onKeyPress","length","type","name","React","Component","Twott","twotContent","moment","setSeconds","seconds","format","locale","defaultProps","Index","twottsArray","callback","q","query","orderBy","onSnapshot","subscribeTwotts","changes","docChanges","forEach","change","push","doc","data","_id","id","indexTwottsArray","findIndex","reverse","map","Header","src","alt","ConnexionButtons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.507066b4.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from 'firebase/app';\r\n//import { getAnalytics } from 'firebase/analytics';\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  getDocs,\r\n  doc,\r\n  onSnapshot,\r\n  setDoc,\r\n  addDoc,\r\n  query,\r\n  orderBy,\r\n  limitToLast\r\n} from 'firebase/firestore';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyBVjIWLsXI1tg5QKckgk6IRaVadJlCl3t4',\r\n  authDomain: 'twotter-843fe.firebaseapp.com',\r\n  projectId: 'twotter-843fe',\r\n  storageBucket: 'twotter-843fe.appspot.com',\r\n  messagingSenderId: '233762147239',\r\n  appId: '1:233762147239:web:3b2bc786044a02f15e4482',\r\n  measurementId: 'G-ZPWD5H2Q0D'\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n// const analytics = getAnalytics(app);\r\n\r\nconst db = getFirestore(app);\r\n\r\nexport function addTwott(twott) {\r\n  const twottContent = {\r\n    ownerId: '00X',\r\n    twottTime: new Date(),\r\n    twottContent: twott\r\n  };\r\n  addDoc(collection(db, 'twotts'), twottContent);\r\n}\r\n\r\nexport function subscribeTwotts(callback) {\r\n  const q = query(collection(db, 'twotts'), orderBy('twottTime'));\r\n  onSnapshot(q, callback);\r\n}\r\n\r\nexport { db };\r\n","import React from 'react';\r\nimport './TwotCreator.css';\r\nimport { addTwott } from '../../firebase';\r\n\r\nclass TwotCreator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      TwotContent: ''\r\n    };\r\n    this.handleUpdateTwotContent = this.handleUpdateTwotContent.bind(this);\r\n    this.handleSubmitData = this.handleSubmitData.bind(this);\r\n    this.handleSendTwottEnter = this.handleSendTwottEnter.bind(this);\r\n  }\r\n\r\n  handleSendTwottEnter(event) {\r\n    if (event.key === 'Enter' && !event.shiftKey) {\r\n      this.handleSubmitData(event);\r\n    }\r\n  }\r\n\r\n  handleUpdateTwotContent(event) {\r\n    this.setState({ TwotContent: event.target.value });\r\n  }\r\n\r\n  handleSubmitData(event) {\r\n    event.preventDefault();\r\n    addTwott(this.state.TwotContent);\r\n    this.setState({ TwotContent: '' });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"TwotCreator\">\r\n        <form onSubmit={this.handleSubmitData}>\r\n          <textarea\r\n            className=\"TwotContent\"\r\n            value={this.state.TwotContent}\r\n            onChange={this.handleUpdateTwotContent}\r\n            onKeyPress={this.handleSendTwottEnter}\r\n          />\r\n          <div className=\"caracterCount\">\r\n            {this.state.TwotContent.length}/500\r\n          </div>\r\n          <div className=\"listeButtons\">\r\n            <input\r\n              className=\"SendButton\"\r\n              type=\"submit\"\r\n              name=\"Send\"\r\n              value=\"Send\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TwotCreator;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nmoment.locale('fr');\r\nimport './Twott.css';\r\n\r\nfunction Twott({ twotContent, ownerId, twottTime }) {\r\n  return (\r\n    <div className=\"Twott\">\r\n      <div className=\"twottHeader\">\r\n        <span className=\"headerLabel\">{ownerId}</span>\r\n        <span className=\"headerLabel\">\r\n          {moment(new Date(1970, 0, 1).setSeconds(twottTime.seconds)).format(\r\n            'HH:mm DD/MM/YYYY'\r\n          )}\r\n        </span>\r\n      </div>\r\n      {twotContent}\r\n    </div>\r\n  );\r\n}\r\n\r\nTwott.defaultProps = {\r\n  twotContent: '',\r\n  ownerId: '000',\r\n  twottTime: { seconds: 515656488465 }\r\n};\r\n\r\nTwott.propTypes = {\r\n  twotContent: PropTypes.string,\r\n  ownerId: PropTypes.string,\r\n  twottTime: PropTypes.object\r\n};\r\n\r\nexport default Twott;\r\n","import React from 'react';\r\nimport TwotCreator from '../components/TwotCreator/TwotCreator';\r\nimport Twott from '../components/Twott/Twott';\r\nimport { subscribeTwotts } from '../../src/firebase';\r\nimport './Index.css';\r\n\r\nclass Index extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { twottsArray: [] };\r\n  }\r\n\r\n  componentDidMount() {\r\n    subscribeTwotts((changes) => {\r\n      changes.docChanges().forEach((change) => {\r\n        if (change.type === 'added') {\r\n          const twottsArray = this.state.twottsArray;\r\n          twottsArray.push({ ...change.doc.data(), _id: change.doc.id });\r\n          this.setState({ twottsArray });\r\n        } else if (change.type === 'modified') {\r\n          const twottsArray = this.state.twottsArray;\r\n          const indexTwottsArray = twottsArray.findIndex(\r\n            (twott) => twott._id === change.doc.id\r\n          );\r\n          twottsArray[indexTwottsArray] = {\r\n            ...change.doc.data(),\r\n            _id: change.doc.id\r\n          };\r\n          this.setState({ twottsArray });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Index\">\r\n        <TwotCreator />\r\n        {this.state.twottsArray.reverse().map((twott) => (\r\n          <Twott\r\n            key={twott._id}\r\n            ownerId={twott.ownerId}\r\n            twotContent={twott.twottContent}\r\n            twottTime={twott.twottTime}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"Header\">\r\n      <img className=\"logo\" src=\"./twotterLogo.png\" alt=\"logo\" />\r\n      <span className=\"title\">Twotter</span>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './ConnexionButtons.css';\r\n\r\nfunction ConnexionButtons() {\r\n  return (\r\n    <div className=\"Buttons\">\r\n      {/* \r\n      <button className=\"ConnexionButtons\">Connexion</button>\r\n      <button className=\"ConnexionButtons\">Inscription</button>\r\n      */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConnexionButtons;\r\n","import React from 'react';\nimport Index from './pages/Index';\nimport Header from './components/Header/Header';\nimport ConnexionButtons from './components/ConnexionButtons/ConnexionButtons';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <ConnexionButtons />\n      <Index />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}